@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  box-sizing: border-box;
}

:root {
  --border-color: #374151;
  /*--text-color: #BCC8D0;*/
  --heading-color: #E7EEF4;
  --pastel-orange: #fed1c7;
}

body {
  color: var(--heading-color);
  background: radial-gradient(circle, rgba(10, 15, 37, 1) 10%, rgba(2, 2, 12, 1) 100%) transparent;
}

.star {
  position: absolute;
  width: 2px;
  height: 2px;
  background: white;
  border-radius: 50%;
  opacity: 0;
  animation: twinkle 3s infinite ease-in-out;
}

@keyframes twinkle {
  0%,
  100% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
}

.yellow-star {
  background: linear-gradient(to right, #ffeb3b, #ffc107);
  clip-path: polygon(
    50% 0%,
    61% 35%,
    98% 35%,
    68% 57%,
    79% 91%,
    50% 70%,
    21% 91%,
    32% 57%,
    2% 35%,
    39% 35%
  );
  width: 10px;
  height: 10px;
}

/* typewriter effect start */
@keyframes slide {
  50% {
    visibility: visible;
  }
  100% {
    visibility: hidden;
  }
}

@keyframes slideLastElement {
  from,
  to {
    visibility: visible;
  }
}

@keyframes typing {
  from {
    max-width: 0;
  }
  to {
    max-width: 100%;
  }
}

@keyframes blink-caret {
  from,
  to {
    border-color: transparent;
  }
  50% {
    border-color: rgb(240, 150, 132);
  }
}

/* typewriter effect end */

.btn-snake {
  background: linear-gradient(to right, rgb(58, 142, 213), rgb(30, 80, 150));
  position: absolute;
  border: 2px solid #BCC8D0;
  box-shadow: none;
  left: 50%;
  transform: translateX(-50%);
  top: 10.5rem;

  @media only screen and (min-width: 640px) {
    top: 50%;
  }
}

.btn-snake:hover {
}

.canvas-snake {
}

.game-over {
  top: 70%;
  left: 50%;
  transform: translateX(-50%);
}

.icon-gesture {
  width: 150px;
  position: absolute;
  top: 1rem;
  left: 50%;
  transform: translateX(-50%);

  @media only screen and (min-width: 640px) {
    top: 20%;
  }
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  backdrop-filter: blur(10px);
  z-index: 3;
}


.overlay-game-over {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 3;
}

.text-snake {
  position: absolute;
  display: flex;
  align-items: center;
  flex-direction: column;
  white-space: nowrap;
  left: 50%;
  transform: translateX(-50%);
  top: 9rem;
  margin-bottom: 2rem;
}

/* Stars */
.iceland-sky {
  background: linear-gradient(to bottom, #020111, #191621);
  height: 100vh;
}

.stars {
  background: transparent;
}

.stars::after {
  content: "";
  position: absolute;
  width: 2px;
  height: 2px;
  background: white;
  box-shadow: 50px 80px white,
  150px 200px white,
  300px 100px white,
  400px 50px white,
  500px 300px white,
  600px 400px white,
  700px 250px white,
  800px 120px white,
  900px 500px white,
  100px 600px white,
  1200px 200px white,
  1300px 700px white,
  1400px 300px white,
  1500px 500px white;
  animation: twinkleStars 2s infinite alternate ease-in-out;
}

@keyframes twinkleStars {
  0% {
    opacity: 0.6;
  }
  100% {
    opacity: 1;
  }
}

/* Aurora */
.aurora {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.aurora div {
  position: absolute;
  width: 40%;
  height: 50%;
  background: radial-gradient(circle, rgba(0, 255, 150, 0.3), transparent);
  border-radius: 50%;
  filter: blur(80px);
  animation: moveAurora 6s infinite alternate ease-in-out;
}

.aurora div:nth-child(1) {
  top: 10%;
  left: 20%;
  animation-delay: 0s;
}

.aurora div:nth-child(2) {
  top: 20%;
  left: 50%;
  animation-delay: 1s;
}

.aurora div:nth-child(3) {
  top: 30%;
  left: 75%;
  animation-delay: 2s;
}

@keyframes moveAurora {
  0% {
    transform: translateY(-20px) scaleX(1.2);
    opacity: 0.5;
  }
  100% {
    transform: translateY(20px) scaleX(1.5);
    opacity: 1;
  }
}

/*snake*/
@keyframes snakeFadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.snake-animated-state {
  opacity: 0; /* Start hidden */
  animation: snakeFadeIn 2s forwards; /* Apply fade-in animation */
}

/* homepage */
.home__btn--primary, .home__btn--secondary {
  position: relative;
  transition: transform 0.2s ease-in-out;
}

.home__btn--primary {
  font-size: 1.3rem;
  background: linear-gradient(136deg, rgb(10, 15, 37) -47.25%, rgb(30, 40, 70) 11.1%, RGB(10, 15, 40) 93.37%, rgb(30, 40, 70) 178.71%);
  padding: 0.8rem 1.8rem;
  font-weight: 500;
}

@media (min-width: theme('screens.sm')) {
  .home__btn--primary {
    font-size: 1.5rem;
    padding: 0.8rem 2.2rem;
  }
}

.home__btn--primary:hover {
  outline-offset: 3px;
  outline: 1px solid var(--pastel-orange);
  backdrop-filter: blur(34px);
  -webkit-backdrop-filter: blur(34px);
  transform: scale(1.05);
  box-shadow: 0 0 10px var(--pastel-orange), 0 0 20px var(--border-color);
  animation: flicker 0.15s infinite alternate;
}

.home__btn--secondary {
  transition: transform 0.2s ease-in-out;
  background: transparent;
  font-size: 1rem;
  padding: 0.6rem 1.2rem;
  font-weight: 500;
}

.home__btn--secondary:hover {
  outline-offset: 3px;
  outline: 1px solid var(--text-color);
  backdrop-filter: blur(34px);
  -webkit-backdrop-filter: blur(34px);
  transform: scale(1.05);
  box-shadow: 0 0 10px var(--pastel-orange), 0 0 20px var(--border-color);
  animation: flicker 0.15s infinite alternate;
}

@media (min-width: theme('screens.sm')) {
  .home__btn--secondary {
    font-size: 1.2rem;
    padding: 0.8rem 1.2rem;
  }
}

.home__btn--primary::before,.home__btn--secondary::before {
  content: "";
  position: absolute;
  inset: -1px;
  padding: 1px;
  transition: 0.3s;
  mask: linear-gradient(white, white) content-box, linear-gradient(white, white);
  -webkit-mask: linear-gradient(white, white) content-box, linear-gradient(white, white);
  mask-composite: exclude;
  -webkit-mask-composite: exclude;
}

.home__btn--primary::before {
  background: linear-gradient(270deg, var(--pastel-orange), rgb(240, 150, 132));
}

.home__btn--secondary:before {
  background: linear-gradient(270deg, var(--text-color), gray);
}

.fade-in {
  opacity: 0;
  animation: fadeIn 2s ease-out forwards;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.panel__link {
  position: relative;
  display: inline-block;
  color: var(--heading-color);
}

.panel__link::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  width: 0;
  height: 2px;
  background-color: var(--pastel-orange);
  transition: width 0.3s ease-in-out;
}

.panel__link:hover::after {
  width: 100%;
}

@keyframes border-beam {
  to {
    content: var(--tw-content);
    offset-distance: 100%;
  }
}

@keyframes moveUp {
  0% {
    opacity: 0;
    transform: translateY(0.5rem);
  }
  100% {
    transform: translateY(0px);
    opacity: 1;
  }
}

.panel {
  background-color: #fafafa;
  border: 1px solid var(--border-color);
  background-color: rgba(30, 30, 30, 0.3);
  transform: translateY(0.5rem);
  background: linear-gradient(197deg, rgba(30, 30, 30, 0.3) 21.66%, rgba(38, 38, 38, 0.4) 56.46%, rgba(46, 46, 46, 0.5) 92.21%, rgba(54, 54, 54, 0.6) 106.26%);
  opacity: 0;
  animation: 1s cubic-bezier(0.4, 0, 0.2, 1) 0.2s 1 normal forwards running moveUp;
}

/*@media (min-width: theme('screens.sm')) {*/

.panel::before {
  content: "";
  position: absolute;
  background: var(--pastel-orange);
  opacity: 0.1;
  height: 140px;
  width: 180px;
  filter: blur(80px);
  -webkit-filter: blur(80px);
  left: -40px;
  top: -20px;
}

@media (min-width: theme('screens.sm')) {
  .panel::before {
    height: 180px;
    width: 260px;
  }
}

.border-beam {
  position: absolute;
  inset: -1px;
  border: 1px solid transparent;
  z-index: -1;
  mask: linear-gradient(transparent, transparent), linear-gradient(white, white);
  -webkit-mask-clip: padding-box, border-box;
  mask-clip: padding-box, border-box;
  -webkit-mask-composite: intersect;
  mask-composite: intersect;
  --size: 200;
}

.border-beam::after {
  content: '';
  position: absolute;
  aspect-ratio: 1 / 1;
  width: calc(var(--size) * 1px);
  animation: border-beam 15s infinite linear;
  background: linear-gradient(to left, var(--pastel-orange), #F09684, transparent);
  offset-anchor: 90% 50%;
  offset-path: rect(0 auto auto 0 round calc(var(--size) * 1px));
}